N,A = map(int, input().split())
X = list(map(int,input().split()))

dp = [[ [0]*(50*50) ] * 50]*50
for j in range(N):
    for k in range(N):
        for s in range(max(1,N*k)):
            print('s',s)
            if j == 0 and k == 0 and s == 0:
                dp[j][k][s] = 1
            elif j >= 1:
                if  s < X[j]:
                    dp[j][k][s] = dp[j-1][k][s]
                elif  k>=1 and s>=X[j]:
                    dp[j][k][s] = dp[j-1][k][s] + dp[j-1][k-1][s-X[j]]
                else:
                    dp[j][k][s] = 0

            if dp[j][k][s] != 0:
                print('dp',dp[j][k][s])

ans = 0
for k in range(N):
    ans += dp[N][k][k*A]
print('ans = ',ans)

# import itertools
# N,A = map(int, input().split())
# X = map(int,input().split())

# ans = 0
# X = sorted(X)
# for n in range(1,N+1):
#     tmp = []
#     tmp = list(itertools.combinations(X,n))
#     tmp_sum = []

#     for i in range(len(tmp)):
#         tmp_sum.append(sum(tmp[i]))
#     ans += tmp_sum.count(A*n)
#     if tmp_sum[0] > A*n:
#         break

# print(ans)
